<?php
/**
 * @author Amasty Team
 * @copyright Copyright (c) 2018 Amasty (https://www.amasty.com)
 * @package Amasty_Affiliate
 */


namespace Amasty\Affiliate\Model;

use Magento\Framework\Model\AbstractModel;

class Coupon extends AbstractModel
{
    /**
     * @var \Magento\SalesRule\Model\Coupon\Codegenerator
     */
    private $codegenerator;

    /**
     * @var \Magento\SalesRule\Model\CouponFactory
     */
    private $couponFactory;

    /**
     * @var \Magento\SalesRule\Api\CouponRepositoryInterface
     */
    private $couponRepository;

    public function __construct(
        \Magento\Framework\Model\Context $context,
        \Magento\Framework\Registry $registry,
        \Magento\SalesRule\Model\Coupon\Codegenerator $codegenerator,
        \Magento\SalesRule\Model\CouponFactory $couponFactory,
        \Magento\SalesRule\Api\CouponRepositoryInterface $couponRepository,
        \Magento\Framework\Model\ResourceModel\AbstractResource $resource = null,
        \Magento\Framework\Data\Collection\AbstractDb $resourceCollection = null,
        array $data = []
    ) {
        $this->codegenerator = $codegenerator;
        $this->couponFactory = $couponFactory;
        $this->couponRepository = $couponRepository;
        parent::__construct($context, $registry, $resource, $resourceCollection, $data);
    }

    /**
     * {@inheritdoc}
     */
    protected function _construct()
    {
        $this->_init('Amasty\Affiliate\Model\ResourceModel\Coupon');
    }

    /**
     * @param \Amasty\Affiliate\Model\Program $program
     * @param int $accountId
     */
    public function addCoupon($program, $accountId)
    {
        /** @var \Amasty\Affiliate\Model\ResourceModel\Coupon\Collection $affiliateCouponCollection */
        $affiliateCouponCollection = $this->getCollection()->addFilterForCoupon($program->getProgramId(), $accountId);

        if ($affiliateCouponCollection->getSize() > 0) {
            /** @var \Magento\SalesRule\Model\Coupon $coupon */
            $coupon = $this->couponRepository->getById($affiliateCouponCollection->getFirstItem()->getCouponId());
            $coupon->setRuleId($program->getRuleId());
            $this->couponRepository->save($coupon);
        } else {
            /** @var \Magento\SalesRule\Model\Coupon $coupon */
            $coupon = $this->couponFactory->create();

            $code = $this->codegenerator->generateCode();
            /** @var \Magento\SalesRule\Model\Coupon $coupon */
            $coupon->setId(null)
                ->setRuleId($program->getRuleId())
                ->setType(\Magento\SalesRule\Helper\Coupon::COUPON_TYPE_SPECIFIC_AUTOGENERATED)
                ->setCode($code);
            $coupon = $this->couponRepository->save($coupon);

            $data = [
                'account_id' => $accountId,
                'program_id' => $program->getProgramId(),
                'coupon_id' => $coupon->getCouponId(),
            ];

            $this->addData($data);
            $this->getResource()->save($this);
        }
    }
}
